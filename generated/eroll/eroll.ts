// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class LogBet extends ethereum.Event {
  get params(): LogBet__Params {
    return new LogBet__Params(this);
  }
}

export class LogBet__Params {
  _event: LogBet;

  constructor(event: LogBet) {
    this._event = event;
  }

  get BetID(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get PlayerAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get RewardValue(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get ProfitValue(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get BetValue(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get PlayerNumber(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get RandomQueryID(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class LogResult extends ethereum.Event {
  get params(): LogResult__Params {
    return new LogResult__Params(this);
  }
}

export class LogResult__Params {
  _event: LogResult;

  constructor(event: LogResult) {
    this._event = event;
  }

  get ResultSerialNumber(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get BetID(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get PlayerAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get PlayerNumber(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get DiceResult(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get Value(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get Status(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get Proof(): Bytes {
    return this._event.parameters[7].value.toBytes();
  }
}

export class LogRefund extends ethereum.Event {
  get params(): LogRefund__Params {
    return new LogRefund__Params(this);
  }
}

export class LogRefund__Params {
  _event: LogRefund;

  constructor(event: LogRefund) {
    this._event = event;
  }

  get BetID(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get PlayerAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get RefundValue(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class LogOwnerTransfer extends ethereum.Event {
  get params(): LogOwnerTransfer__Params {
    return new LogOwnerTransfer__Params(this);
  }
}

export class LogOwnerTransfer__Params {
  _event: LogOwnerTransfer;

  constructor(event: LogOwnerTransfer) {
    this._event = event;
  }

  get SentToAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get AmountTransferred(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class eroll extends ethereum.SmartContract {
  static bind(address: Address): eroll {
    return new eroll("eroll", address);
  }

  totalWeiWon(): BigInt {
    let result = super.call("totalWeiWon", "totalWeiWon():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalWeiWon(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalWeiWon", "totalWeiWon():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxProfitAsPercentOfHouse(): BigInt {
    let result = super.call(
      "maxProfitAsPercentOfHouse",
      "maxProfitAsPercentOfHouse():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_maxProfitAsPercentOfHouse(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxProfitAsPercentOfHouse",
      "maxProfitAsPercentOfHouse():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  payoutsPaused(): boolean {
    let result = super.call("payoutsPaused", "payoutsPaused():(bool)", []);

    return result[0].toBoolean();
  }

  try_payoutsPaused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("payoutsPaused", "payoutsPaused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  maxNumber(): BigInt {
    let result = super.call("maxNumber", "maxNumber():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxNumber(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxNumber", "maxNumber():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  playerGetPendingTxByAddress(addressToCheck: Address): BigInt {
    let result = super.call(
      "playerGetPendingTxByAddress",
      "playerGetPendingTxByAddress(address):(uint256)",
      [ethereum.Value.fromAddress(addressToCheck)]
    );

    return result[0].toBigInt();
  }

  try_playerGetPendingTxByAddress(
    addressToCheck: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "playerGetPendingTxByAddress",
      "playerGetPendingTxByAddress(address):(uint256)",
      [ethereum.Value.fromAddress(addressToCheck)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxProfitDivisor(): BigInt {
    let result = super.call(
      "maxProfitDivisor",
      "maxProfitDivisor():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_maxProfitDivisor(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxProfitDivisor",
      "maxProfitDivisor():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minNumber(): BigInt {
    let result = super.call("minNumber", "minNumber():(uint256)", []);

    return result[0].toBigInt();
  }

  try_minNumber(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("minNumber", "minNumber():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  treasury(): Address {
    let result = super.call("treasury", "treasury():(address)", []);

    return result[0].toAddress();
  }

  try_treasury(): ethereum.CallResult<Address> {
    let result = super.tryCall("treasury", "treasury():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  totalWeiWagered(): BigInt {
    let result = super.call(
      "totalWeiWagered",
      "totalWeiWagered():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalWeiWagered(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalWeiWagered",
      "totalWeiWagered():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  gasForOraclize(): BigInt {
    let result = super.call("gasForOraclize", "gasForOraclize():(uint32)", []);

    return result[0].toBigInt();
  }

  try_gasForOraclize(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "gasForOraclize",
      "gasForOraclize():(uint32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  contractBalance(): BigInt {
    let result = super.call(
      "contractBalance",
      "contractBalance():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_contractBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "contractBalance",
      "contractBalance():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  minBet(): BigInt {
    let result = super.call("minBet", "minBet():(uint256)", []);

    return result[0].toBigInt();
  }

  try_minBet(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("minBet", "minBet():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  playerWithdrawPendingTransactions(): boolean {
    let result = super.call(
      "playerWithdrawPendingTransactions",
      "playerWithdrawPendingTransactions():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_playerWithdrawPendingTransactions(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "playerWithdrawPendingTransactions",
      "playerWithdrawPendingTransactions():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  maxProfit(): BigInt {
    let result = super.call("maxProfit", "maxProfit():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxProfit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxProfit", "maxProfit():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalBets(): BigInt {
    let result = super.call("totalBets", "totalBets():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalBets(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalBets", "totalBets():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  gamePaused(): boolean {
    let result = super.call("gamePaused", "gamePaused():(bool)", []);

    return result[0].toBoolean();
  }

  try_gamePaused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("gamePaused", "gamePaused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  houseEdge(): BigInt {
    let result = super.call("houseEdge", "houseEdge():(uint256)", []);

    return result[0].toBigInt();
  }

  try_houseEdge(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("houseEdge", "houseEdge():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  houseEdgeDivisor(): BigInt {
    let result = super.call(
      "houseEdgeDivisor",
      "houseEdgeDivisor():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_houseEdgeDivisor(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "houseEdgeDivisor",
      "houseEdgeDivisor():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxPendingPayouts(): BigInt {
    let result = super.call(
      "maxPendingPayouts",
      "maxPendingPayouts():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_maxPendingPayouts(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxPendingPayouts",
      "maxPendingPayouts():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class OwnerSetCallbackGasPriceCall extends ethereum.Call {
  get inputs(): OwnerSetCallbackGasPriceCall__Inputs {
    return new OwnerSetCallbackGasPriceCall__Inputs(this);
  }

  get outputs(): OwnerSetCallbackGasPriceCall__Outputs {
    return new OwnerSetCallbackGasPriceCall__Outputs(this);
  }
}

export class OwnerSetCallbackGasPriceCall__Inputs {
  _call: OwnerSetCallbackGasPriceCall;

  constructor(call: OwnerSetCallbackGasPriceCall) {
    this._call = call;
  }

  get newCallbackGasPrice(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class OwnerSetCallbackGasPriceCall__Outputs {
  _call: OwnerSetCallbackGasPriceCall;

  constructor(call: OwnerSetCallbackGasPriceCall) {
    this._call = call;
  }
}

export class OwnerSetHouseEdgeCall extends ethereum.Call {
  get inputs(): OwnerSetHouseEdgeCall__Inputs {
    return new OwnerSetHouseEdgeCall__Inputs(this);
  }

  get outputs(): OwnerSetHouseEdgeCall__Outputs {
    return new OwnerSetHouseEdgeCall__Outputs(this);
  }
}

export class OwnerSetHouseEdgeCall__Inputs {
  _call: OwnerSetHouseEdgeCall;

  constructor(call: OwnerSetHouseEdgeCall) {
    this._call = call;
  }

  get newHouseEdge(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class OwnerSetHouseEdgeCall__Outputs {
  _call: OwnerSetHouseEdgeCall;

  constructor(call: OwnerSetHouseEdgeCall) {
    this._call = call;
  }
}

export class __callbackCall extends ethereum.Call {
  get inputs(): __callbackCall__Inputs {
    return new __callbackCall__Inputs(this);
  }

  get outputs(): __callbackCall__Outputs {
    return new __callbackCall__Outputs(this);
  }
}

export class __callbackCall__Inputs {
  _call: __callbackCall;

  constructor(call: __callbackCall) {
    this._call = call;
  }

  get myid(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get result(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class __callbackCall__Outputs {
  _call: __callbackCall;

  constructor(call: __callbackCall) {
    this._call = call;
  }
}

export class OwnerSetTreasuryCall extends ethereum.Call {
  get inputs(): OwnerSetTreasuryCall__Inputs {
    return new OwnerSetTreasuryCall__Inputs(this);
  }

  get outputs(): OwnerSetTreasuryCall__Outputs {
    return new OwnerSetTreasuryCall__Outputs(this);
  }
}

export class OwnerSetTreasuryCall__Inputs {
  _call: OwnerSetTreasuryCall;

  constructor(call: OwnerSetTreasuryCall) {
    this._call = call;
  }

  get newTreasury(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class OwnerSetTreasuryCall__Outputs {
  _call: OwnerSetTreasuryCall;

  constructor(call: OwnerSetTreasuryCall) {
    this._call = call;
  }
}

export class __callback1Call extends ethereum.Call {
  get inputs(): __callback1Call__Inputs {
    return new __callback1Call__Inputs(this);
  }

  get outputs(): __callback1Call__Outputs {
    return new __callback1Call__Outputs(this);
  }
}

export class __callback1Call__Inputs {
  _call: __callback1Call;

  constructor(call: __callback1Call) {
    this._call = call;
  }

  get myid(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get result(): string {
    return this._call.inputValues[1].value.toString();
  }

  get proof(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class __callback1Call__Outputs {
  _call: __callback1Call;

  constructor(call: __callback1Call) {
    this._call = call;
  }
}

export class OwnerUpdateContractBalanceCall extends ethereum.Call {
  get inputs(): OwnerUpdateContractBalanceCall__Inputs {
    return new OwnerUpdateContractBalanceCall__Inputs(this);
  }

  get outputs(): OwnerUpdateContractBalanceCall__Outputs {
    return new OwnerUpdateContractBalanceCall__Outputs(this);
  }
}

export class OwnerUpdateContractBalanceCall__Inputs {
  _call: OwnerUpdateContractBalanceCall;

  constructor(call: OwnerUpdateContractBalanceCall) {
    this._call = call;
  }

  get newContractBalanceInWei(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class OwnerUpdateContractBalanceCall__Outputs {
  _call: OwnerUpdateContractBalanceCall;

  constructor(call: OwnerUpdateContractBalanceCall) {
    this._call = call;
  }
}

export class OwnerPausePayoutsCall extends ethereum.Call {
  get inputs(): OwnerPausePayoutsCall__Inputs {
    return new OwnerPausePayoutsCall__Inputs(this);
  }

  get outputs(): OwnerPausePayoutsCall__Outputs {
    return new OwnerPausePayoutsCall__Outputs(this);
  }
}

export class OwnerPausePayoutsCall__Inputs {
  _call: OwnerPausePayoutsCall;

  constructor(call: OwnerPausePayoutsCall) {
    this._call = call;
  }

  get newPayoutStatus(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class OwnerPausePayoutsCall__Outputs {
  _call: OwnerPausePayoutsCall;

  constructor(call: OwnerPausePayoutsCall) {
    this._call = call;
  }
}

export class OwnerChangeOwnerCall extends ethereum.Call {
  get inputs(): OwnerChangeOwnerCall__Inputs {
    return new OwnerChangeOwnerCall__Inputs(this);
  }

  get outputs(): OwnerChangeOwnerCall__Outputs {
    return new OwnerChangeOwnerCall__Outputs(this);
  }
}

export class OwnerChangeOwnerCall__Inputs {
  _call: OwnerChangeOwnerCall;

  constructor(call: OwnerChangeOwnerCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class OwnerChangeOwnerCall__Outputs {
  _call: OwnerChangeOwnerCall;

  constructor(call: OwnerChangeOwnerCall) {
    this._call = call;
  }
}

export class OwnerSetMaxProfitAsPercentOfHouseCall extends ethereum.Call {
  get inputs(): OwnerSetMaxProfitAsPercentOfHouseCall__Inputs {
    return new OwnerSetMaxProfitAsPercentOfHouseCall__Inputs(this);
  }

  get outputs(): OwnerSetMaxProfitAsPercentOfHouseCall__Outputs {
    return new OwnerSetMaxProfitAsPercentOfHouseCall__Outputs(this);
  }
}

export class OwnerSetMaxProfitAsPercentOfHouseCall__Inputs {
  _call: OwnerSetMaxProfitAsPercentOfHouseCall;

  constructor(call: OwnerSetMaxProfitAsPercentOfHouseCall) {
    this._call = call;
  }

  get newMaxProfitAsPercent(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class OwnerSetMaxProfitAsPercentOfHouseCall__Outputs {
  _call: OwnerSetMaxProfitAsPercentOfHouseCall;

  constructor(call: OwnerSetMaxProfitAsPercentOfHouseCall) {
    this._call = call;
  }
}

export class OwnerSetMinBetCall extends ethereum.Call {
  get inputs(): OwnerSetMinBetCall__Inputs {
    return new OwnerSetMinBetCall__Inputs(this);
  }

  get outputs(): OwnerSetMinBetCall__Outputs {
    return new OwnerSetMinBetCall__Outputs(this);
  }
}

export class OwnerSetMinBetCall__Inputs {
  _call: OwnerSetMinBetCall;

  constructor(call: OwnerSetMinBetCall) {
    this._call = call;
  }

  get newMinimumBet(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class OwnerSetMinBetCall__Outputs {
  _call: OwnerSetMinBetCall;

  constructor(call: OwnerSetMinBetCall) {
    this._call = call;
  }
}

export class OwnerPauseGameCall extends ethereum.Call {
  get inputs(): OwnerPauseGameCall__Inputs {
    return new OwnerPauseGameCall__Inputs(this);
  }

  get outputs(): OwnerPauseGameCall__Outputs {
    return new OwnerPauseGameCall__Outputs(this);
  }
}

export class OwnerPauseGameCall__Inputs {
  _call: OwnerPauseGameCall;

  constructor(call: OwnerPauseGameCall) {
    this._call = call;
  }

  get newStatus(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class OwnerPauseGameCall__Outputs {
  _call: OwnerPauseGameCall;

  constructor(call: OwnerPauseGameCall) {
    this._call = call;
  }
}

export class OwnerTransferEtherCall extends ethereum.Call {
  get inputs(): OwnerTransferEtherCall__Inputs {
    return new OwnerTransferEtherCall__Inputs(this);
  }

  get outputs(): OwnerTransferEtherCall__Outputs {
    return new OwnerTransferEtherCall__Outputs(this);
  }
}

export class OwnerTransferEtherCall__Inputs {
  _call: OwnerTransferEtherCall;

  constructor(call: OwnerTransferEtherCall) {
    this._call = call;
  }

  get sendTo(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class OwnerTransferEtherCall__Outputs {
  _call: OwnerTransferEtherCall;

  constructor(call: OwnerTransferEtherCall) {
    this._call = call;
  }
}

export class PlayerWithdrawPendingTransactionsCall extends ethereum.Call {
  get inputs(): PlayerWithdrawPendingTransactionsCall__Inputs {
    return new PlayerWithdrawPendingTransactionsCall__Inputs(this);
  }

  get outputs(): PlayerWithdrawPendingTransactionsCall__Outputs {
    return new PlayerWithdrawPendingTransactionsCall__Outputs(this);
  }
}

export class PlayerWithdrawPendingTransactionsCall__Inputs {
  _call: PlayerWithdrawPendingTransactionsCall;

  constructor(call: PlayerWithdrawPendingTransactionsCall) {
    this._call = call;
  }
}

export class PlayerWithdrawPendingTransactionsCall__Outputs {
  _call: PlayerWithdrawPendingTransactionsCall;

  constructor(call: PlayerWithdrawPendingTransactionsCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class OwnerRefundPlayerCall extends ethereum.Call {
  get inputs(): OwnerRefundPlayerCall__Inputs {
    return new OwnerRefundPlayerCall__Inputs(this);
  }

  get outputs(): OwnerRefundPlayerCall__Outputs {
    return new OwnerRefundPlayerCall__Outputs(this);
  }
}

export class OwnerRefundPlayerCall__Inputs {
  _call: OwnerRefundPlayerCall;

  constructor(call: OwnerRefundPlayerCall) {
    this._call = call;
  }

  get originalPlayerBetId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get sendTo(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get originalPlayerProfit(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get originalPlayerBetValue(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class OwnerRefundPlayerCall__Outputs {
  _call: OwnerRefundPlayerCall;

  constructor(call: OwnerRefundPlayerCall) {
    this._call = call;
  }
}

export class OwnerSetOraclizeSafeGasCall extends ethereum.Call {
  get inputs(): OwnerSetOraclizeSafeGasCall__Inputs {
    return new OwnerSetOraclizeSafeGasCall__Inputs(this);
  }

  get outputs(): OwnerSetOraclizeSafeGasCall__Outputs {
    return new OwnerSetOraclizeSafeGasCall__Outputs(this);
  }
}

export class OwnerSetOraclizeSafeGasCall__Inputs {
  _call: OwnerSetOraclizeSafeGasCall;

  constructor(call: OwnerSetOraclizeSafeGasCall) {
    this._call = call;
  }

  get newSafeGasToOraclize(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class OwnerSetOraclizeSafeGasCall__Outputs {
  _call: OwnerSetOraclizeSafeGasCall;

  constructor(call: OwnerSetOraclizeSafeGasCall) {
    this._call = call;
  }
}

export class OwnerkillCall extends ethereum.Call {
  get inputs(): OwnerkillCall__Inputs {
    return new OwnerkillCall__Inputs(this);
  }

  get outputs(): OwnerkillCall__Outputs {
    return new OwnerkillCall__Outputs(this);
  }
}

export class OwnerkillCall__Inputs {
  _call: OwnerkillCall;

  constructor(call: OwnerkillCall) {
    this._call = call;
  }
}

export class OwnerkillCall__Outputs {
  _call: OwnerkillCall;

  constructor(call: OwnerkillCall) {
    this._call = call;
  }
}

export class PlayerRollDiceCall extends ethereum.Call {
  get inputs(): PlayerRollDiceCall__Inputs {
    return new PlayerRollDiceCall__Inputs(this);
  }

  get outputs(): PlayerRollDiceCall__Outputs {
    return new PlayerRollDiceCall__Outputs(this);
  }
}

export class PlayerRollDiceCall__Inputs {
  _call: PlayerRollDiceCall;

  constructor(call: PlayerRollDiceCall) {
    this._call = call;
  }

  get rollUnder(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class PlayerRollDiceCall__Outputs {
  _call: PlayerRollDiceCall;

  constructor(call: PlayerRollDiceCall) {
    this._call = call;
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}
